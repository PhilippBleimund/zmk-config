#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {

	keymap {
		compatible = "zmk,keymap";

		base_layer {
			bindings = <
				&kp LBKT   &kp COMMA  &kp DOT    &kp P      &kp Y      &kp F      &kp G      &kp C      &kp T      &kp Z
				&mt APOS A &kp O      &kp E      &kp I      &kp U      &kp H      &kp D      &kp R      &kp N      &kp S
				&kp SEMI   &kp Q      &kp J      &kp K      &kp X      &kp B      &kp M      &kp W      &kp V      &kp L
				                      &kp LCTRL  &kp LSHIFT &kp BSPC   &kp ENTER  &kp SPACE  &to 1 
			>;
		};
		
		number_layer {
			bindings = <
				&kp LC(W)  &kp LS(N8) &kp LS(N9) &kp UP     &kp DEL    &kp KP_MINUS &kp N7          &kp N8     &kp N9     &kp KP_PLUS
				&to 2      &kp LC(A)  &kp LEFT   &kp DOWN   &kp RIGHT  &kp KP_EQUAL &kp N4          &kp N5     &kp N6     &kp KP_MULTIPLY
				&kp LA(F4) &kp RA(N7) &kp RA(N8) &kp RA(N9) &kp RA(N0) &kp N0       &kp N1          &kp N2     &kp N3     &kp KP_DIVIDE
				                      &kp LC(C)  &kp LC(V)  &to 0      &kp ENTER    &mt LCTRL SPACE &kp BSPC 
			>;
		};
		
		function_layer {
			bindings = <
				&to 3      &kp ESC    &kp C_PREV   &kp C_NEXT   &kp C_PLAY &kp F9     &kp F10     &kp F11    &kp F12    &kp PSCRN
				&to 3      &kp TAB    &kp C_VOL_DN &kp C_VOL_UP &kp PG_UP  &kp F5     &kp F6      &kp F7     &kp F8     &kp LC(Z)
				&to 3      &kp LGUI   &kp C_BRI_DN &kp C_BRI_UP &kp PG_DN  &kp F1     &kp F2      &kp F3     &kp F4     &kp LC(Y)
				                      &kp LC(C)    &kp LC(V)    &to 0      &kp ENTER  &kp SPACE   &kp BSPC 
			>;
		};
		
		debug_layer {
			bindings = <
				&none      &bt BT_CLR &none      &none      &none       &none       &none       &none      &none     &none
				&none      &bt BT_NXT &none      &reset     &bootloader &bootloader &reset      &none      &none     &none
				&none      &bt BT_PRV &none      &none      &none       &none       &none       &none      &none     &none
				                      &to 0      &to 0      &to 0       &to 0       &to 0       &to 0
			>;
		};


	};
};