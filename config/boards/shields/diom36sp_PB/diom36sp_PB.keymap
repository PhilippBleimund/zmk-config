#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE        0
#define SPECIAL     1
#define NUM	        2
#define FUNKTION    3
#define MEDIA       4
#define ARROW       5
#define DEBUG       6

/ {

	behaviors {
        thl: tap_hold_layer {
            label = "TAP_HOLD_LAYER";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings= <&mo>, <&tog>;
        };
		tkhl: tap_key_hold_layer {
            label = "TAP_HOLD_KEY";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings= <&kp>, <&tog>;
        };
		tlhk: tap_layer_hold_key {
            label = "TAP_HOLD_KEY";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings= <&tog>, <&kp>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		base_layer {--
			bindings = <
				&kp LBKT   &kp COMMA  &kp DOT    &kp P      &kp Y      &kp F      &kp G      &kp C      &kp T      &kp Z
				&mt APOS A &kp O      &kp E      &kp I      &kp U      &kp H      &kp D      &kp R      &kp N      &kp S
				&kp SEMI   &kp Q      &kp J      &kp K      &kp X      &kp B      &kp M      &kp W      &kp V      &kp L
				                      &thl MEDIA FUNKTION  &ht_hp LSHIFT SPACE &thk LCTRL SPECIAL  &lt ARROW ENTER  &kp BACKSPACE  &tlhk NUM LEFT_ALT
			>;
		};
		
		special_layer {
			bindings = <
				&to DEBUG       &trans       &trans      &trans     &trans     &trans       &trans       &trans      &trans     &trans
				&to DEBUG 	    &trans       &trans      &trans     &trans	   &trans		&trans       &trans      &trans     &trans
				&to DEBUG       &trans       &trans      &trans     &trans     &trans       &trans       &trans      &trans     &trans
				                      &trans      &trans      &trans       &trans       &trans       &trans
			>;
		};

		num_layer {
			bindings = <
				&trans      &trans 	&trans      &trans      &trans       &kp KP_DIVIDE  &kp N7       &kp N8      &kp N9     &kp KP_MINUS
				&trans      &trans 	&trans      &trans      &trans 	  &kp KP_COMMA      &kp N4       &kp N5      &kp N6     &kp KP_PLUS
				&trans      &trans 	&trans      &trans      &trans       &kp N0      	 &kp N1       &kp N2      &kp N3     &kp KP_MULTIPLY
				                      &trans      &trans      &trans       &trans       &trans       &trans
			>;
		};

		funktion_layer {
			bindings = <
				&trans      &kp F9 	&kp F10     &kp F11     &kp F12      &trans       &trans      &trans      &trans     &trans
				&trans      &kp F5	&kp F6      &kp F7      &kp F8 	     &trans 	  	 &trans      &trans      &trans     &trans
				&trans      &kp F1 	&kp F2      &kp F3      &kp F4       &trans       &trans      &trans      &trans     &trans
				                      &trans      &trans      &trans       &trans       &trans       &trans
			>;
		};
		
		media_layer {
			bindings = <
				&none      &none &kp C_PREV    &kp C_NEXT      &kp C_PLAY     &trans       &trans       &trans      &trans     &trans
				&none      &none &kp C_VOL_DN  &kp C_VOL_UP    &none 		&trans		 &trans       &trans      &trans     &trans
				&none      &none &kp C_BRI_DN  &kp C_BRI_UP    &none         &trans       &trans       &trans      &trans     &trans
				                      &trans      &trans      &trans       &trans       &trans       &trans
			>;
		};

		arrow_layer {
			bindings = <
				&trans       &trans       &trans      &trans     &trans     &kp ESCAPE   &kp DELETE      &kp UP_ARROW      &none     		&none
				&trans		 &trans       &trans      &trans     &trans		&none		 &kp LEFT_ARROW  &kp DOWN_ARROW    &kp RIGHT_ARROW  &none
				&trans       &trans       &trans      &trans     &trans     &none       &none       &none      &none     &none
				                      &trans      &trans      &trans       &trans       &trans       &trans
			>;
		};
		
		debug_layer {
			bindings = <
				&none      &bt BT_CLR &none      &none      &none       &none       &none       &none      &none     &none
				&none      &bt BT_NXT &none      &reset     &bootloader &bootloader &reset      &none      &none     &none
				&none      &bt BT_PRV &none      &none      &none       &none       &none       &none      &none     &none
				                      &to 0      &to 0      &to 0       &to 0       &to 0       &to 0
			>;
		};


	};
};
